#!/bin/bash

set -x
set -e

preparation() {
   if [ ! "$temp_dir" = "" ]; then
      true "INFO: custom temp_dir"
      return 0
   fi
   temp_dir="$(mktemp --directory)"
   mkdir -p "$temp_dir/keys"
}

if test -d ~/.ssh ; then
   echo "ERROR: Foder ~/.ssh already exists" >&2
   echo ""
   echo "INFO: Highly recommended to update your ~/.ssh folder!"
   echo ""
   echo "INFO: To move the existing ~/.ssh folder out of the way:"
   echo "INFO: mv ~/.ssh ~/.ssh_my_backup"
   echo ""
   echo "ERROR: Stop." >&2
   exit 100
fi

my_vm_name="$(qubesdb-read /name)"

preparation
cd "$temp_dir"
mkdir -p "$temp_dir/qubes-remote-support"

## input wormhole code and press enter
## to confirm, press y and press enter
## TODO: timeout
wormhole receive

## Debugging.
ls -la
ls -la remote-support-keys.tar.gz

## TODO: sanitize remote-support-keys.tar.gz file size

tar --warning=no-timestamp -xvf remote-support-keys.tar.gz -C "$temp_dir/qubes-remote-support"

## Debugging.
ls -la
ls -la "$temp_dir/qubes-remote-support/keys"

## TODO: sanitize
## $temp_dir/qubes-remote-support/keys/id_ed25519.pub
## $temp_dir/qubes-remote-support/keys/id_ed25519

## TODO: sanitize
hostname="$(cat "$temp_dir/qubes-remote-support/keys/hostname")"
ssh_algorithm="$(cat "$temp_dir/qubes-remote-support/keys/ssh_algorithm")"
ssh_fingerprint="$(cat "$temp_dir/qubes-remote-support/keys/ssh_fingerprint")"

ssh_known_keys_line="$hostname $ssh_algorithm $ssh_fingerprint"

mkdir -p ~/.ssh
cp "$temp_dir/qubes-remote-support/keys/id_ed25519.pub" ~/.ssh/
cp "$temp_dir/qubes-remote-support/keys/id_ed25519" ~/.ssh/
## TODO: test
echo "$ssh_known_keys_line" > ~/.ssh/known_hosts
chmod 700 ~/.ssh
chmod 600 ~/.ssh/*

echo "INFO: Press enter to continue"
echo ""

echo "INFO: To avoid confusion, it is advised your delete folder ~/QubesIncoming in sys-whonix if it exists. In most cases no such folder exists."
echo "INFO: If there is nothing you need to backup, you could run the following command."
echo "rm -rf ~/QubesIncoming"
read press_enter_to_continue

echo "INFO: Will ask to copy 1.auth_private to sys-whonix."
echo "INFO: In other words, will run the following command:"
echo "qvm-copy $temp_dir/qubes-remote-support/keys/1.auth_private"
echo "INFO: When Qubes dom0 asks, answer to copy to sys-whonix."
read press_enter_to_continue

## TODO: Is there any elegant way to automate that?
## TODO: sanitize
qvm-copy "$temp_dir/qubes-remote-support/keys/1.auth_private"

echo ""
echo "INFO: Install authenticated Tor onion v3 service private key with the following command in sys-whonix."
echo "sudo sourcefile=~/QubesIncoming/${my_vm_name}/1.auth_private anon-server-to-client-install"

read press_enter_to_continue

echo ""
echo "INFO: Do you want to SSH to '$hostname'?"
read press_enter_to_continue

echo ""
echo "INFO: Trying SSH..."

counter=0

## Required 13 retries during testing until onion v3 service was ready.
while true ; do
   counter="$((counter + 1))"
   if [ "$counter" -ge "500" ]; then
      echo "ERROR: SSH connection unsuccessful!"
      exit 1
   fi
   if ssh "$hostname" ; then
      true "INFO: SSH success."
   else
      sleep 10
   fi
done
